====
RHEL
====
==================
Control Node Setup 
==================
1. sudo apt/dnf update -y && sudo apt/dnf upgrade -y

2. Enable EPEL (extra packages repo)
      a. sudo dnf install -y epel-release
  
3. Install Python + pip + Git + SSH
sudo dnf install -y python3 python3-pip git sshpass
  
4. sudo apt/dnf install -y ansible-core
    a. if unsure run the below command:
        apt search ansible
        dnf search ansible

5. Command: ansible --version

6. sudo dnf install -y openssh-client

7. ssh <username>@<server_node_ip-address>

======
Debian
======
1. Update system
    command: sudo apt update && sudo apt upgrade -y

2. Install Python + pip + Ansible dependencies
    command: sudo apt install -y software-properties-common python3 python3-pip python3-venv sshpass git

3. Add Ansible PPA repo
    command: sudo add-apt-repository --yes --update ppa:ansible/ansible

4. Install Ansible
    command: sudo apt install -y ansible

5. ansible --version

6. sudo dnf install -y openssh-client

7. ssh <username>@<server_node_ip-address>

=========
Breakdown
=========
Why SSH server vs. client?
      Control Node (Ansible server): needs the SSH client → this is what initiates connections out to other machines.
      Managed Nodes (the ones you configure): need the SSH server (sshd) → this is what listens for incoming connections and accepts logins.

Think of it like this:
      Your laptop has an SSH client → you run ssh user@server to connect.
      The remote server has an SSH server → it listens on port 22 and lets you in

Which way do you SSH?
      Always from the control node → managed node.
      The control node uses SSH to connect into each managed node, run commands, and apply your playbooks.
      Managed nodes never initiate connections back to the control node.
      So if your control node is 192.168.1.10 and a managed node is 192.168.1.20, you would do this from the control node:
      ssh user@192.168.1.20
      *You do not SSH from managed → control.
